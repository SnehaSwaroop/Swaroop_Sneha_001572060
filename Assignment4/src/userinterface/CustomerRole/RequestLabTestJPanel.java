/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.Customer.Order;
import Business.EcoSystem;
import Business.Organization;
import Business.Restaurant.Menu;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class RequestLabTestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    Customer customer;
    EcoSystem ecosystem;
    ArrayList<Order> orderList;
    
    public RequestLabTestJPanel(JPanel userprocesscontainer, UserAccount useraccount, Customer cust, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userprocesscontainer;
        this.userAccount = useraccount;
        this.userProcessContainer = userprocesscontainer;
        this.customer = cust;
        this.ecosystem = ecoSystem;
        this.orderList = new ArrayList<Order>();
        valueLabel.setText(this.ecosystem.getName());
        
        populateRestaurantTable();
    }
    
    public void populateRestaurantTable() {
        DefaultTableModel model = (DefaultTableModel)tblRestaurant.getModel();
        model.setRowCount(0);
        
        if (ecosystem.getRestaurantDirectory().getRestaurantList() != null) {
            for(Restaurant restaurant : ecosystem.getRestaurantDirectory().getRestaurantList()) {
                Object row[] = new Object[1];
                row[0] = restaurant;
                model.addRow(row); 
            }       
        }
    }
    
    public void populateMenuTable(Restaurant rest) {
        DefaultTableModel model = (DefaultTableModel)tblMenu.getModel();
        model.setRowCount(0);
        
        if (rest.getMenu() != null) {
            for(Menu menu : rest.getMenu()) {
                Object row[] = new Object[2];
                row[0] = menu;
                row[1] = menu.getPrice();
                model.addRow(row); 
            }       
        }
    }
    
    public void populateOrderTable() {
            DefaultTableModel model = (DefaultTableModel)tblOrder.getModel();
            double totalPrice = 0;
            
            model.setRowCount(0);
            if (orderList != null) {
                for(Order order : orderList) {
                    Object row[] = new Object[2];
                    row[0] = order;
                    row[1] = order.getPrice();
                    totalPrice += order.getPrice();
                    model.addRow(row); 
                }       
            }
            lblTotal.setText("Your total is: $" + totalPrice);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMenu = new javax.swing.JTable();
        btnViewMenu = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnAddToOrder = new javax.swing.JButton();
        BtnPlaceOrder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRestaurant = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        btnRemoveItem = new javax.swing.JButton();
        txtComments = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, -1, -1));

        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 130, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        enterpriseLabel.setText("Enterprise :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 120, 30));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Select a Restaurant");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 170, 20));

        tblMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Item", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblMenu);
        if (tblMenu.getColumnModel().getColumnCount() > 0) {
            tblMenu.getColumnModel().getColumn(1).setResizable(false);
            tblMenu.getColumnModel().getColumn(1).setPreferredWidth(3);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 420, 110));

        btnViewMenu.setText("View Menu");
        btnViewMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewMenuActionPerformed(evt);
            }
        });
        add(btnViewMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 120, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Menu");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 150, 20));

        btnAddToOrder.setText("Add to Order");
        btnAddToOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToOrderActionPerformed(evt);
            }
        });
        add(btnAddToOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, 120, -1));

        BtnPlaceOrder.setText("Place Order");
        BtnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPlaceOrderActionPerformed(evt);
            }
        });
        add(BtnPlaceOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 480, 160, -1));

        tblRestaurant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Restaurant Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRestaurant);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 160, 110));

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Item", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblOrder);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 400, 100));

        btnRemoveItem.setText("Remove Item");
        btnRemoveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveItemActionPerformed(evt);
            }
        });
        add(btnRemoveItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, 130, 30));
        add(txtComments, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 450, 30));

        jLabel3.setText("Comments");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 120, 20));
        add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 320, 160, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CustomerAreaJPanel panel = (CustomerAreaJPanel) component;
        panel.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnViewMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewMenuActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRestaurant.getSelectedRow();
        if (selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a Restaurant", "Warning", JOptionPane.WARNING_MESSAGE); 
        } 
        else {
            Restaurant selectedRestaurant = (Restaurant) tblRestaurant.getValueAt(selectedRow, 0);
            populateMenuTable(selectedRestaurant);
        }
    }//GEN-LAST:event_btnViewMenuActionPerformed

    private void btnAddToOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMenu.getSelectedRow();
        if (selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select an item to add", "Warning", JOptionPane.WARNING_MESSAGE); 
        }
        else {
            Menu selectedMenuItem = (Menu) tblMenu.getValueAt(selectedRow, 0);
            Order item = new Order (selectedMenuItem.getName(), selectedMenuItem.getPrice());
            this.orderList.add(item);
            populateOrderTable();
        } 
    }//GEN-LAST:event_btnAddToOrderActionPerformed

    private void BtnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPlaceOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRestaurant.getSelectedRow();
        Restaurant selectedRestaurant = null;
        if (selectedRow >= 0){
            selectedRestaurant = (Restaurant) tblRestaurant.getValueAt(selectedRow, 0);
        } else {
           JOptionPane.showMessageDialog(null,"Please select a Restaurant", "Warning", JOptionPane.WARNING_MESSAGE); 
           return;
        }
        
        WorkRequest request = new WorkRequest() {};
        double totalPrice = 0;
        String message = " ";
        
        for(Order o : orderList) {
            totalPrice = totalPrice + o.getPrice();
            message += o.getName() + ",";
        } 
        message += "Total: $" + totalPrice;  
        
        request.setMessage(message);
        request.setStatus("New");
        request.setSender(userAccount);
        request.setCustomer(customer);
        request.setComments(txtComments.getText().trim());
        
        selectedRestaurant.getWorkQueue().getWorkRequestList().add(request);
        JOptionPane.showMessageDialog(null, "Your Order is Placed");
        
        userProcessContainer.remove(this);
        CardLayout cardlayout = (CardLayout) userProcessContainer.getLayout();
        Component[] component = userProcessContainer.getComponents();
          for (Component comp : component){
            if (comp instanceof CustomerAreaJPanel){
                System.out.println(comp);
                CustomerAreaJPanel panel = (CustomerAreaJPanel) comp;
                panel.populateRequestTable();
            }
        }
        cardlayout.previous(userProcessContainer);
    }//GEN-LAST:event_BtnPlaceOrderActionPerformed

    private void btnRemoveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveItemActionPerformed
        // TODO add your handling code here:
           int selectedRow = tblOrder.getSelectedRow();
        if (selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select item to add", "Warning", JOptionPane.WARNING_MESSAGE); 
        }
        else {
            Order cartItem = (Order) tblOrder.getValueAt(selectedRow, 0);
            this.orderList.remove(cartItem);
            populateOrderTable();
        } 
    }//GEN-LAST:event_btnRemoveItemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnPlaceOrder;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnAddToOrder;
    private javax.swing.JButton btnRemoveItem;
    private javax.swing.JButton btnViewMenu;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblMenu;
    private javax.swing.JTable tblOrder;
    private javax.swing.JTable tblRestaurant;
    private javax.swing.JTextField txtComments;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
